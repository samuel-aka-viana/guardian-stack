services:
  api:
    image: pentos/todo-api:good
    container_name: todo_flask
    command: python run.py
    env_file:
      - .env
    ports:
      - '5000:5000'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

  front:
    image: pentos/todo-front:good
    container_name: todo_react
    ports:
      - '80:80'
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - app_network

  postgres:
    image: postgres:16.3
    container_name: todo_postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-volume:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres-volume:
