apiVersion: v1
kind: ConfigMap
metadata:
  name: react-nginx-conf
  namespace: default
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
    
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index index.html index.htm;
        }

        location /api {
            proxy_pass http://api-service:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-frontend-react
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
        - name: react-frontend
          image: pentos/todo-front:good
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: nginx-config
          configMap:
            name: react-nginx-conf

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: react-frontend
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30001
